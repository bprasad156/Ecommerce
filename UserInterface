package com.example.ecommerce;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.scene.text.Text;

import java.io.File;

public class UserInterface {
    GridPane loginPage;
    HBox headerBar;
    HBox  footerBar;
    Button signInButton;
    Button cartButton;
    VBox body;
    Label welcomeLabel;
    Customer loggedInCustomer;
    ProductList productList=new ProductList();
    VBox productPage;
    Button placeOrderButton=new Button("Place Order");
    ObservableList<Product> itemsInCart= FXCollections.observableArrayList();
    BorderPane createContent(){
        BorderPane root=new BorderPane();
        root.setPrefSize(870,650);
       // root.getChildren().add(loginPage);
        root.setTop(headerBar);
       // root.setCenter(loginPage);
        body=new VBox();
        body.setPadding(new Insets(10));
        body.setAlignment(Pos.CENTER);
        root.setCenter(body);
        productPage=productList.getAllProduct();
        body.getChildren().add(productPage);
        root.setBottom(footerBar);
        return root;
    }
    public  UserInterface(){
        createLoginPage();
        createHeaderBar();
        createfooterBar();
    }
    private void createLoginPage(){
        Text userNameText=new Text(" UserName");
        Text passwordText=new Text("Password");
        TextField username=new TextField("balasalaprasad1234@gmail.com");
       // username.setText("uygu");
        username.setPromptText("Type your username here");
        PasswordField password=new PasswordField();
        password.setText("B.prasad12");
        password.setPromptText("Type your password here");
        Label messageLabel= new Label("Hi");

        Button loginButton=new Button("Login");
        loginPage = new GridPane();
       // loginPage.setStyle("-fx-background-color:grey;");
        loginPage.setAlignment(Pos.CENTER);
        loginPage.setHgap(10);
        loginPage.setVgap(10);
        loginPage.add(userNameText,0,0);
        loginPage.add(username,1,0);
        loginPage.add(passwordText,0,1);
        loginPage.add(password,1,1);
        loginPage.add(messageLabel,0,2);
        loginPage.add(loginButton,1,2);

         loginButton.setOnAction(new EventHandler<ActionEvent>() {
             @Override
             public void handle(ActionEvent actionEvent) {
                 String Name =username.getText();
                 String pass=password.getText();
                 Login login =new Login();
                 loggedInCustomer=login.customerLogin(Name,pass);
                 if(loggedInCustomer!=null){
                     messageLabel.setText("Welcome:"+ loggedInCustomer.getName());
                     welcomeLabel.setText("Welcome:"+loggedInCustomer.getName());
                     headerBar.getChildren().add(welcomeLabel);
                     body.getChildren().clear();
                     body.getChildren().add(productPage);

                 }
                 else{
                     messageLabel.setText("Login Failed! please provide correct  credentials");
                 }

             }
         });


    }
    private  void  createfooterBar(){

        Button buyNowButton =new Button(" BuyNow");
        Button addToCartButton=new Button("Add to Cart");
        footerBar=new HBox();
        footerBar.setPadding(new Insets(10));
        //  headerBar.setStyle("-fx-background-color:grey;");
        footerBar.setSpacing(10);
        footerBar.setAlignment(Pos.CENTER);
        footerBar.getChildren().addAll(buyNowButton,addToCartButton);
        buyNowButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent actionEvent) {
                Product product=productList.getSelectedProduct();
                if(product==null){
                        // please select a product first to place order
                    showDialog("please select a product first to place order!");
                    return;
                }
                if(loggedInCustomer==null){
                    showDialog("Please login  first to place order");
                    return;
                }
                boolean status =Order.placeOrder(loggedInCustomer,product);
                if(status==true){
                    showDialog("Order placed sucessfully!!");
                }
                else{
                    showDialog("Order failed!!");
                }
            }
        });
        addToCartButton.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent actionEvent) {
                Product product=productList.getSelectedProduct();
                if(product==null){
                    // please select a product first to place order
                    showDialog("please select a product first to add  it to Cart!");
                    return;
                }
                itemsInCart.add(product);
                showDialog("select item has been to the cart  successfully");
            }
        });


    }
    private  void showDialog(String message){
        Alert alert =new Alert(Alert.AlertType.INFORMATION);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.setTitle("Message");
        alert.showAndWait();
    }
    private  void  createHeaderBar(){
        Button homeButton=new Button();
        String imgg= "C:\\Ladder\\project\\Ecommerce\\src\\img.png";
        File file = new File(imgg);
        Image img = new Image(file.toURI().toString());
        ImageView board= new ImageView();
       // Image   image =new Image("C:\\Ladder\\project\\Ecommerce\\src\\img.png");
        //ImageView imageView=new ImageView();
        board.setImage(img);
        board.setFitHeight(20);
        board.setFitWidth(80);
        homeButton.setGraphic(board);
        TextField searchBar=new TextField();
        searchBar.setPromptText("Search here");
        searchBar.setPrefWidth(280);
        Button searchButton =new Button(" Search");
         signInButton=new Button("Sign In");
         welcomeLabel=new Label();
          cartButton= new Button("Cart");
          Button orderButton=new Button("Orders");
          headerBar=new HBox();
          headerBar.setPadding(new Insets(10));
         //  headerBar.setStyle("-fx-background-color:grey;");
          headerBar.setSpacing(10);
          headerBar.setAlignment(Pos.CENTER);
          headerBar.getChildren().addAll(homeButton,searchBar,searchButton,signInButton,cartButton,orderButton);
          signInButton.setOnAction(new EventHandler<ActionEvent>() {
              @Override
              public void handle(ActionEvent actionEvent) {
                  body.getChildren().clear();
                  body.getChildren().add(loginPage);
                  headerBar.getChildren().remove(signInButton);
              }
          });
          cartButton.setOnAction(new EventHandler<ActionEvent>() {
              @Override
              public void handle(ActionEvent actionEvent) {
                  body.getChildren().clear();
                  VBox prodPage=productList.getProductInCart(itemsInCart);
                  prodPage.setAlignment(Pos.CENTER);
                  prodPage.setSpacing(10);
                  prodPage.getChildren().add(placeOrderButton);
                  body.getChildren().add(prodPage);
                  footerBar.setVisible(false);
              }
          });
          placeOrderButton.setOnAction(new EventHandler<ActionEvent>() {
              @Override
              public void handle(ActionEvent actionEvent) {
                  if(itemsInCart==null){
                      showDialog("Please add products in the cart to place  order !");
                      return;
                  }
                  if(loggedInCustomer==null){
                      showDialog("Please login first to place order");
                      return ;
                  }
                  int count=Order.placeMultipleOrder(loggedInCustomer,itemsInCart);
                  if(count!=0){
                      showDialog("Order for "+count+" products placed successfully");
                  }
                  else{
                      showDialog("Order failed!!");
                  }

              }
          });
          homeButton.setOnAction(new EventHandler<ActionEvent>() {
              @Override
              public void handle(ActionEvent actionEvent) {
                  body.getChildren().clear();
                  body.getChildren().add(productPage);
                  footerBar.setVisible(true);
                  if(loggedInCustomer==null&&headerBar.getChildren().indexOf(signInButton) == -1) {
                      //if (headerBar.getChildren().indexOf(signInButton) == -1) {
                          headerBar.getChildren().add(signInButton);
                     // }
                  }

              }
          });

    }
}
